#
# Author: Christian Alexander <alexforsale@yahoo.com>
#
variables: secrets.yml

templates:

  global:
# semua task akan berhenti jika sisa space untuk path - path dibawah ini kurang
# dari 5000mb
    free_space:
      path: '{? media.partition ?}'
      space: 5000
    pathscrub: windows
    no_entries_ok: yes

#    proxy:
#      http: '{? proxy.http ?}'

  reject:
    regexp:
      reject:
        - (s|d)ub(s|bed|lado|titulado)?\b
        - \bdual\b
        - \b3d\b
        - \b(fr)(ench)?\b
        - \b(ita)(lian)?\b
        - \b(spa)(nish)?\b
        - \b(ger)(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
        - \bportugese?\b
        - \btruefrench?\b
        - \blatin(o)?\b
        - msd
        - afg
        - hc
        - korsub
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

  torrents:
    torrent_alive:
      min_seeds: 10
      reject_for: 30 minutes
    magnets: no

  rss-tv:
    inputs:
      - rss:
          url: https://eztv.unblocked.vc/ezrss.xml
          silent: yes
      - rss:
          url: http://www.torrentfunk.com/tv/rss.xml
          silent: yes
      - rss:
          url: '{? showrss.url ?}'
          silent: yes

  rss-movies:
    inputs:
      - rss:
          url: https://kat.am/movies/?rss=1
      - rss:
          url: https://rarbg.to/rssdd.php?category=movies
      - rss:
          url: https://www.limetorrents.cc/rss/16/
      - rss:
          url: https://yts.am/rss

  series:
    metainfo_series: yes
    thetvdb_lookup: yes
    trakt_lookup: yes
    configure_series:
      settings:
        qualities:
          - hdtv <720p
        identified_by: ep
        propers: no
        tracking: backfill
      from:
        thetvdb_list:
          username: '{? thetvdb.user ?}'
          account_id: '{? thetvdb.id ?}'
        filesystem:
          -  '{? staging.series ?}'
          -  '{? folder.series ?}'
    exists_series:
      path:
        -  '{? staging.series ?}/'
        -  '{? folder.series ?}/{{series_name}}'

  movies:
    imdb_lookup: yes
    trakt_lookup: yes
    exists_movie:
      path:
        - '{? folder.movies ?}'
        - '{? staging.movies ?}' 

  transmission-global:
    _transmission-settings: &transmission-settings
      enabled: yes
      host: localhost
      port: 9091
      username: transmission
      password: transmission
      ratio: 1
      include_subs: yes
    retry_failed:
      retry_time: 10 seconds
      retry_time_multiplier: 1
      max_retries: 4

  transmission-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      path: '{? staging.series ?}/{{tvdb_series_name|default(series_name)|pathscrub}}/'
      content_filename: "{{tvdb_series_name|default(series_name)|pathscrub}}-{{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}-{{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %}-[{{quality}}]{% endif %}"

  transmission-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      path: '{? staging.movies ?}/{{movie_name|pathscrub}}'
      content_filename: "{{tmdb_name|pathscrub}}-({{tmdb_year}}){% if quality|default(False) %}-[{{quality}}]{% endif %}"

  series-notify:
    notify:
      entries:
        message: |+
          *Task started:
          *{{task}}
          {% if series_name is defined -%}
          *{{series_name}}* - {{series_id}} - {{quality|d('')}}
          {% else -%}
          {{title}}
          {%- endif -%}
          *{{trakt_ep_name|d(tvdb_ep_name)|d('')}}*
          {% if tvdb_ep_image is defined -%}
          [Image]({{tvdb_ep_image|replace("_", "%5F")}})
          {%- endif -%}
          {% if tvdb_url is defined -%}
          [Show page]({{tvdb_url|replace("_", "%5F")}})
          {%- endif -%}
          {% if tvdb_ep_air_date is defined -%}
          *Aired:* {{tvdb_ep_air_date}}
          {%- endif -%}
          {% if tvdb_ep_rating is defined -%}
          *Ep rate:* {{tvdb_ep_rating}}
          {%- endif -%}
          {% if tvdb_actors is defined -%}
          *Cast:* {{tvdb_actors}}
          {%- endif -%}
          {% if tvdb_ep_overview is defined -%}
          *plot:*
          --------------------
          {{tvdb_ep_overview}}
          {%- endif -%}
        via:
          - telegram:
              bot_token: '{? telegram.bot_token ?}'
              parse_mode: markdown
              recipients:
                - username: '{? telegram.username ?}'

  movies-notify:
    notify:
      entries:
        message: |+
          *Task started:
          *{{task}}
          {% if imdb_name is defined -%}
          *{{imdb_name}}* - ({{imdb_year}})
          {{quality|d('')}}
          {{imdb_score}}/10 - {{imdb_votes}} votes
          {{imdb_genres|join(', ')|title}}
          *Plot:* {{imdb_plot_outline}}
          {% if tmdb_posters is defined -%}
          [Image]({{tmdb_posters[0]|replace("_", "%5F")}})
          {%- endif -%}
          [Movie Page]({{imdb_url|d('')}})
          {% else -%}
          {{title}}
          {%- endif -%}
        via:
          - telegram:
              bot_token: '{? telegram.bot_token ?}'
              parse_mode: markdown
              recipients:
                - username: '{? telegram.username ?}'

  email-notify:
    notify:
      task:
        template: html
        via:
          - email:
              autofrom: yes
              to: '{? email.recipients ?}'

tasks:
  versioncheck:
    version_checker:
      check_for_dev_version: yes
      interval: 1

  check-existing-movies:
    disable:
      - seen
      - seen_info_hash
      - exists_movies
    template:
      - movies
    filesystem:
      path:
        - '{? folder.movies ?}'
        - '{? staging.movies ?}'
      retrieve:
        - files
        - dirs
      recursive: yes
      regexp: '.*\.(avi|mkv|mp4|m4v|iso)$'
    accept_all: yes
    list_add:
      - movie_list: existing movies

  check-existing-episodes:
    template:
      - series
    filesystem:
      path:
        - '{? folder.series ?}'
        - '{? staging.series ?}'
      retrieve:
        - files
        - dirs
      recursive: yes
      regexp: '.*\.(avi|mkv|mp4|m4v|iso)$'
    all_series: yes
    only_new: yes
    list_add:
      - entry_list: existing episodes

  update-series-list:
    disable:
      - seen
    template:
      - series
    filesystem:
      path:
        - '{? folder.series ?}'
        - '{? staging.series ?}'
      retrieve: dirs
      recursive: no
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    list_add:
      - entry_list: existing series

  discover-series:
    template:
      - series
      - torrents
      - transmission-series
      - reject
      - series-notify
    discover:
      what:
        - next_series_episodes: yes
      from:
        - rarbg:
            category: x264
    content_size:
      max: 900
      min: 20

  discover-movies:
    template:
      - movies
      - torrents
      - transmission-movies
      - reject
      - movies-notify
    discover:
      what:
        - trakt_list:
            username: '{? trakt.user ?}'
            account: '{? trakt.account ?}'
            list: watchlist
            type: movies
      from:
        - rarbg:
            category: [2, 5, 8, 9, 20, 15, 16]
        - piratebay: yes
    list_match:
      from:
        - trakt_list:
            username: '{? trakt.user ?}'
            account: '{? trakt.account ?}'
            list: Watchlist
            type: movies
    content_size:
      max: 4000
      min: 20

  download-series-manual:
    disable:
      - seen
      - seen_info_hash
    metainfo_series: yes
    thetvdb_lookup: yes
    trakt_lookup: yes
    parsing:
      series: guessit
    filesystem:
      path: '{? staging.series ?}'
      mask: '*.torrent'
    accept_all: yes
    template:
      - transmission-series
      - series-notify
    exec:
      on_output:
        for_accepted: rm -rf "{{location}}"

  download-movies-manual:
    disable:
      - seen
      - seen_info_hash
    imdb_lookup: yes
    trakt_lookup: yes
    filesystem:
      path: '{? staging.movies ?}'
      mask: '*.torrent'
    accept_all: yes
    template:
      - transmission-movies
      - movies-notify
    exec:
      on_output:
        for_accepted: rm -rf "{{location}}"

  random-movies-listing:
    template:
      - rss-movies
      - torrents
      - movies
      - reject
    priority: 20
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    imdb:
      min_score: 7.0
      min_votes: 800
      min_year: 2005
      reject_genres:
        - News
        - Documentary
        - Horror
        - Biography
        - Reality-Tv
        - Horror
        - Musical
        - Music
      accept_languages:
        - english
    regexp:
      from: title
      reject:
        - ts
        - hindi
        - german
        - french
        - s\d+e\d+: {from: title}
        - '\d{4}.\d{2}.\d{2}': {from: title}
        - \d+x\d+: {from: title}
    require_field: imdb_url
    imdb_lookup: yes
    seen_movies: strict
    list_add:
      - movie_list: random-movies

  random-movies-download:
    priority: 21
    template:
      - torrents
      - movies
      - transmission-movies
      - reject
      - movies-notify
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    limit_new: 2
    proper_movies: yes
    discover:
      what:
        - movie_list: random-movies
      from:
        - rarbg:
            category: [2, 5, 8, 9, 20, 15, 16]
        - piratebay: yes
    require_field: imdb_url
    imdb_lookup: yes
    seen_movies: strict
    list_match:
      from:
        - movie_list: random-movies
    content_size:
      max: 4000
      min: 20

  download-series-rss:
    template:
      - series
      - rss-tv
      - torrents
      - transmission-series
      - reject
      - series-notify
    content_size:
      max: 900
      min: 20

  get-subs:
    no_entries_ok: yes
    subtitle_list:
      list: need_subs
      recursion_depth: 3
    list_match:
      from:
        - subtitle_list:
            list: need_subs
    subliminal:
      languages:
        - en
      alternatives:
        - id
      providers: 
        - opensubtitles
        - podnapisi
      single: no
      hearing_impaired: yes
      exact_match: no
      authentication:
        opensubtitles:
          username: '{? opensubtitles.username ?}'
          password: '{? opensubtitles.password ?}'

  copy-series:
    disable:
      - seen
      - seen_info_hash
      - retry_failed
    template: series-notify
    metainfo_series: yes
    trakt_lookup: yes
    thetvdb_lookup: yes
    filesystem:
      path: '{? staging.series ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    seen: local
    require_field:
      - trakt_series_name
      - trakt_season
      - trakt_ep_name
    copy:
      to: "{? folder.series ?}/{{tvdb_series_name}}/Season {{trakt_season}}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - subs
    exists: "{? folder.series ?}"
    content_size:
      min: 50
    list_add:
      - subtitle_list:
          list: need_subs
          languages:
            - en
            - id

  copy-movies:
    disable:
      - seen
      - seen_info_hash
    template: movies-notify
    imdb_lookup: yes
    filesystem:
      path: '{? staging.movies ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    seen: local
    require_field: imdb_name
    copy:
      to: "{? folder.movies ?}/{{ imdb_mpaa_rating }}/{{ imdb_name }}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - subs
    exists: "{? folder.movies ?}"
    content_size:
      min: 50
    list_add:
      - subtitle_list:
          list: need_subs
          languages:
            - en
            - id

  clean-up-transmission:
    clean_transmission:
      host: localhost
      port: 9091
      username: transmission
      password: transmission
      finished_for: 1 days
      min_ratio: 1
      delete_files: yes
      directories:
        -  '{? staging.series ?}'
        -  '{? staging.movies ?}'
    disable: details

  fill-thetvdb-list:
    entry_list: existing series
    accept_all: yes
    thetvdb_lookup: yes
    list_add:
      - thetvdb_list:
          username: '{? thetvdb.user ?}'
          account_id: '{? thetvdb.id ?}'
    seen: local

  update-trakt-episodes:
    disable:
      - seen
      - seen_info_hash
    entry_list: existing episodes
    trakt_lookup: yes
    accept_all: yes
    list_add:
      - trakt_list:
          username: '{? trakt.user ?}'
          account: '{? trakt.account ?}'
          list: episodes-list
          type: shows

  update-trakt-series:
    disable:
      - seen
      - seen_info_hash
    entry_list: existing series
    trakt_lookup: yes
    accept_all: yes
    list_add:
      - trakt_list:
          username: '{? trakt.user ?}'
          account: '{? trakt.account ?}'
          list: series-list
          type: shows

  update-trakt-movies:
    disable:
      - seen
      - seen_info_hash
    movie_list: existing movies
    trakt_lookup: yes
    accept_all: yes
    list_add:
      - trakt_list:
          username: '{? trakt.user ?}'
          account: '{? trakt.account ?}'
          list: movie-list
          type: movies

  series-trakt-set-begin:
    next_trakt_episodes:
      username: '{? trakt.user ?}'
      account: '{? trakt.account ?}'
      list: episodes-list
      strip_dates: yes
      context: collected
      position: next
    accept_all: yes
    set_series_begin: yes
    disable: seen

  discover-series-backfill:
    manual: yes
    template:
      - series
      - torrents
      - transmission-series
      - reject
      - series-notify
    discover:
      release_estimations: loose
      what:
        - next_series_episodes:
            from_start: yes
            backfill: yes
      from:
        - rarbg:
            category: HDTV
        - piratebay: yes
      limit: 6
    interval: 12 hours
    max_reruns: 10
    list_match:
      from:
        - entry_list: existing episodes
      action: reject
    content_size:
      max: 900
      min: 20
          
schedules:
  - tasks:
    - versioncheck
    - update-series-list
    - check-existing-episodes
    - discover-movies
    - random-movies-listing
    - random-movies-download
    - fill-thetvdb-list
    - check-existing-movies
    - update-trakt-*
    interval:
      days: 1
  - tasks:
    - copy-series
    - copy-movies
    interval:
      minutes: 15
  - tasks:
    - clean-up-transmission
    - series-trakt-set-begin
    interval:
      hours: 3
  - tasks:
    - download-series-manual
    - download-movies-manual
    interval:
      minutes: 40
  - tasks:
    - discover-series
    - download-series-rss
    - get-subs
    interval:
      minutes: 30
